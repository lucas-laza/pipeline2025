name: CI/CD Pipeline

env:
  DB_DATABASE: pipeline
  DB_USERNAME: pipeline_user
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: 3306
  DB_DRIVER: mysql
  DB_NAMESPACE: Drupal\mysql\Driver\Database\mysql
  DB_AUTOLOAD: core/modules/mysql/src/Driver/Database/mysql/
  DB_ISOLATION_LEVEL: READ COMMITTED

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Run PHPUnit Tests
        run: vendor/bin/phpunit --configuration phpunit.xml --verbose

  build:
    name: Build Drupal Site
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
  
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
  
      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Use External Database
        run: |
          echo "Configuring database settings for external connection."
          sed -i 's|\$databases\[\'default\'\]\[\'default\'\] = .*|\$databases\[\'default\'\]\[\'default\'\] = array (\n  "database" => "${{ secrets.DB_DATABASE }}",\n  "username" => "${{ secrets.DB_USERNAME }}",\n  "password" => "${{ secrets.DB_PASSWORD }}",\n  "host" => "${{ secrets.DB_HOST }}",\n  "port" => "${{ env.DB_PORT }}",\n  "driver" => "${{ env.DB_DRIVER }}",\n  "namespace" => "${{ env.DB_NAMESPACE }}",\n  "autoload" => "${{ env.DB_AUTOLOAD }}",\n  "isolation_level" => "${{ env.DB_ISOLATION_LEVEL }}",\n);|' web/sites/default/settings.php

  measure:
    name: Run Lighthouse
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Lighthouse CLI
        run: npm install -g lighthouse puppeteer

      - name: Start PHP Server
        run: php -S localhost:8080 -t web > server.log 2>&1 &

      - name: Wait for Server
        run: sleep 10

      - name: Run Lighthouse
        run: lighthouse http://localhost:8080 --output=json --output-path=./lighthouse-report.json --chrome-flags="--headless --no-sandbox"

      - name: Upload Lighthouse Report
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: ./lighthouse-report.json

  secure:
    name: Dependency Check
    runs-on: ubuntu-22.04
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Enable Dependabot Alerts
        uses: dependabot/fetch-metadata@v1

  # deploy:
  #   name: Deploy to Production
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Set up SSH
  #       uses: webfactory/ssh-agent@v0.7.0
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

  #     - name: Deploy via Rsync
  #       run: rsync -avz --delete ./ user@your-server:/path/to/project
