name: CI/CD Pipeline

env:
  DB_DATABASE: test-pipeline
  DB_USERNAME: test-pipeline
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_HOST: mysql
  DB_PORT: 3306
  DB_DRIVER: mysql
  DB_NAMESPACE: Drupal\mysql\Driver\Database\mysql
  DB_AUTOLOAD: core/modules/mysql/src/Driver/Database/mysql/
  DB_ISOLATION_LEVEL: READ COMMITTED

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build Drupal Site
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        ports:
          - "3306:3306"
        env:
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
          MYSQL_USER: ${{ env.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}

      php-container:
        image: php:8.2-apache
        ports:
          - "8080:80"
        options: >-
          --entrypoint "/bin/sh -c 'apachectl start && tail -f /dev/null'"
        volumes:
          - .:/var/www/html
        depends_on:
          - mysql
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: docker exec php-container composer install --no-interaction --prefer-dist

      - name: Set Up Drupal
        run: docker exec php-container ./vendor/bin/drush site-install --yes

  test:
    name: Run Tests
    needs: build
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        ports:
          - "3306:3306"
        env:
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
          MYSQL_USER: ${{ env.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}

      php-container:
        image: php:8.2-apache
        ports:
          - "8080:80"
        options: >-
          --entrypoint "/bin/sh -c 'apachectl start && tail -f /dev/null'"
        volumes:
          - .:/var/www/html
        depends_on:
          - mysql
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run PHPUnit Tests
        run: docker exec php-container vendor/bin/phpunit --configuration phpunit.xml --verbose

  measure:
    name: Run Lighthouse CI
    needs: build
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        ports:
          - "3306:3306"
        env:
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
          MYSQL_USER: ${{ env.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}

      php-container:
        image: php:8.2-apache
        ports:
          - "8080:80"
        options: >-
          --entrypoint "/bin/sh -c 'apachectl start && tail -f /dev/null'"
        volumes:
          - .:/var/www/html
        depends_on:
          - mysql
    steps:
      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.14.x

      - name: Run Lighthouse CI
        run: lhci autorun --collect.url=http://127.0.0.1:8080 --verbose
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
